package com.example.wolfenstein.games.objects;

public class Map {
    private final int [][] mapData;

    public Map() {
        // 0 = empty, 1-16 = wall types, 17 = enemy, 18 = closed door, 19 = exit,
        // 20 = locked door, 21 = Key, 22 = Health, 23 = Ammo, 24 = Chest
        this.mapData = new int[][]{
                { 1, 2, 3, 4, 5, 6, 7, 8, 9,10,11,12,13,14,15,16, 1, 2, 3, 4, 5, 6, 7, 8, 9,10,11,12,13,14,15,16, 1, 2, 3, 4, 5, 6, 7, 8 },
                { 1, 0, 0,24, 0,17, 0, 0, 0,18, 0, 0,22, 0, 0,23, 0, 0, 0, 0, 0,17, 0, 0, 0, 0, 0, 0, 0, 0,24, 0, 0,21, 0, 0, 0, 0,19, 1 },
                { 2, 0,21, 0, 1, 0,23, 0, 1, 0,22, 0, 1,24, 0, 1, 0,23, 0, 1, 0, 0, 0,22, 0, 1,24, 0, 1,21, 0, 1, 0,23, 0, 1, 0,24, 0, 2 },
                { 3, 0, 1, 0, 0, 0, 0,17, 0, 0, 0, 0,18, 0, 0, 0, 0,17, 0, 0, 0, 0,23, 0, 0, 0,17, 0, 0, 0, 0,24, 0, 0, 0, 0, 1, 0, 3 },
                { 4, 0,17, 0, 4, 0,18, 0, 4, 0,17, 0, 4, 0,18, 0, 4, 0,17, 0, 4, 0,18, 0, 4, 0,17, 0, 4, 0,18, 0, 4, 0,17, 0, 4, 0, 4 },
                { 5, 0, 0,21, 0, 0, 0,23, 0, 0,21, 0, 0, 0,23, 0, 0,21, 0, 0, 0,23, 0, 0,21, 0, 0, 0,23, 0, 0,21, 0, 0, 0,23, 0, 0, 5 },
                { 6, 1, 6, 1, 6, 1, 6, 1, 6, 1, 6, 1, 6, 1, 6, 1, 6, 1, 6, 1, 6, 1, 6, 1, 6, 1, 6, 1, 6, 1, 6, 1, 6, 1, 6, 1, 6, 1, 6, 6 },
                { 7, 0,23, 0, 0,17, 0,24, 0, 0, 0,21, 0,23, 0, 0,17, 0,24, 0, 0, 0,21, 0,23, 0, 0,17, 0,24, 0, 0, 0,21, 0,23, 0, 0, 7 },
                { 8, 0, 8, 1, 8, 1, 8, 1, 8, 1, 8, 1, 8, 1, 8, 1, 8, 1, 8, 1, 8, 1, 8, 1, 8, 1, 8, 1, 8, 1, 8, 1, 8, 1, 8, 1, 8, 1, 8, 8 },
                { 9,24, 0, 0, 0,23, 0, 0, 0,24, 0, 0, 0,23, 0, 0, 0,24, 0, 0, 0,23, 0, 0, 0,24, 0, 0, 0,23, 0, 0, 0,24, 0, 0, 0,23, 9 },
                {10, 1,10, 1,10, 1,10, 1,10, 1,10, 1,10, 1,10, 1,10, 1,10, 1,10, 1,10, 1,10, 1,10, 1,10, 1,10, 1,10, 1,10, 1,10, 1,10,10 },
                {11, 0, 0, 0, 0,17, 0, 0, 0, 0,21, 0, 0, 0,17, 0, 0, 0, 0,21, 0, 0, 0,17, 0, 0, 0, 0,21, 0, 0, 0,17, 0, 0, 0, 0,11,11 },
                {12,23,12,23,12,23,12,23,12,23,12,23,12,23,12,23,12,23,12,23,12,23,12,23,12,23,12,23,12,23,12,23,12,23,12,23,12,23,12,12 },
                {13, 0, 0,21, 0, 0, 0, 0,17, 0, 0,21, 0, 0, 0, 0,17, 0, 0,21, 0, 0, 0, 0,17, 0, 0,21, 0, 0, 0, 0,17, 0, 0,21, 0, 0,13 },
                {14, 1,14, 1,14, 1,14, 1,14, 1,14, 1,14, 1,14, 1,14, 1,14, 1,14, 1,14, 1,14, 1,14, 1,14, 1,14, 1,14, 1,14, 1,14, 1,14,14 },
                {15, 0, 0, 0,23, 0, 0, 0, 0,24, 0, 0, 0,23, 0, 0, 0,24, 0, 0, 0,23, 0, 0, 0,24, 0, 0, 0,23, 0, 0, 0,24, 0, 0, 0,15,15 },
                {16, 1,16, 1,16, 1,16, 1,16, 1,16, 1,16, 1,16, 1,16, 1,16, 1,16, 1,16, 1,16, 1,16, 1,16, 1,16, 1,16, 1,16, 1,16, 1,16,16 },
                { 1, 0,18, 0,20, 0, 0,17, 0, 0,21, 0, 0,20, 0,18, 0, 0,17, 0, 0,21, 0, 0,20, 0,18, 0, 0,17, 0, 0,21, 0, 0,20, 0,18, 0, 1 },
                { 1,21, 0, 0,23, 0,24, 0, 0, 0,17, 0, 0, 0,24, 0, 0, 0,17, 0, 0, 0,24, 0, 0, 0,17, 0, 0, 0,24, 0, 0, 0,17, 0, 0, 0, 1 },
                { 1, 0, 0, 0,22, 0, 0, 0, 0, 0,19, 0, 0, 0, 0, 0,22, 0, 0, 0, 0, 0,19, 0, 0, 0, 0, 0,22, 0, 0, 0, 0, 0,19, 0, 0, 0, 1 },
                { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 }
        };
    }

    public int getTile(int x, int y) {
        if (x < 0 || y < 0 || y >= mapData.length || x >= mapData[0].length) {
            return 1;
        }
        return mapData[y][x];
    }

    public boolean isWall(int x, int y) {
        int tile = getTile(x, y);
        return tile >= 1 && tile <= 16;
    }

    public int getWidth() {
        return mapData[0].length;
    }

    public int getHeight() {
        return mapData.length;
    }


    public void removeEnemy(int x, int y) {
        if (getTile(x, y) == 17) {
            mapData[y][x] = 0;
        }
    }

    public boolean isEnemy(int x, int y) {
        return getTile(x, y) == 17;
    }
    public boolean isDoor(int x, int y) { return getTile(x, y) == 18; }
    public boolean isExit(int x, int y) { return getTile(x, y) == 19; }
    public boolean isLockedDoor(int x, int y) { return getTile(x, y) == 20; }
    public boolean isKey(int x, int y) { return getTile(x, y) == 21; }
    public boolean isHealth(int x, int y) { return getTile(x, y) == 22; }
    public boolean isAmmo(int x, int y) { return getTile(x, y) == 23; }

    public void openDoor(int x, int y) {
        if (isDoor(x, y)) mapData[y][x] = 0;
    }

    public void unlockDoor(int x, int y) {
        if (isLockedDoor(x, y)) mapData[y][x] = 18;
    }

    public void collectItem(int x, int y) {
        if (isKey(x, y) || isHealth(x, y) || isAmmo(x, y)) mapData[y][x] = 0;
    }

}
